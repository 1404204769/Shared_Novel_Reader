<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Label_Pwd1_IMG.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="Label_Pwd2_IMG.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>